//part 2 optimized1
//function has memory 
//function that returns a functionconst directions = [[1, 1], [1, 3], [1, 5], [1, 7], [2, 1]];

const generateTraverser = (rowShift, columnShift) => {
  const traverser = (row = 0, column = 0) => row < mapLayout.length ? traverser(row + rowShift, (column + columnShift) % mapLayout[0].length) + (mapLayout[row][column] === "#" ? 1 : 0) : 0; 
  return traverser;
};

const treeCounts = directions.map(([rowShift, columnShift]) => generateTraverser(rowShift, columnShift)());

console.log(treeCounts);
console.log(treeCounts.reduce((a, b) => a * b, 1));


// inital part 2 code//////////////////////////////////////
// const partTwo = (rowShift, columnShift, row = 0, column = 0) => {
//   return row < mapLayout.length ? partTwo(rowShift, columnShift, row + rowShift, (column + columnShift) % mapLayout[0].length) + (mapLayout[row][column] === "#" ? 1 : 0) : 0
// };
// const treeCountsPart2 = directions.map(([rowShift, columnShift]) => partTwo(rowShift, columnShift));
// console.log(treeCountsPart2);
// console.log(treeCountsPart2.reduce((a, b) => a * b, 1));


//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//  least amount of code
const onelineTraverser = (row = 0, column = 0) => {
  const right = 3;
  const down = 1;
  return row < mapLayout.length ? onelineTraverser(row + down, (column + right) % mapLayout[0].length) + (mapLayout[row][column] === "#" ? 1 : 0) : 0
}

console.log(onelineTraverser());

////////////////////////////////////////////////////////////////////////////////
//function to find the number of trees on the mapLayout
const traverser = (row = 0, column = 0) => {
  const right = 3;
  const down = 1;
  const width = mapLayout[0].length;
  const numberOfRows = mapLayout.length;
  if(row < numberOfRows) {
    const treeNoTree = mapLayout[row][column] === "#" ? 1 : 0;
    return traverser(row + down, (column + right) % width) + treeNoTree;
  } else {
    return 0;
  }
}

console.log(traverser());

//my original code  ///ab
const tobogganRiding = (right, down) => {
  const scaleFactor = Math.ceil(right * mapLayout.length / mapLayout[0].length);
  const bigMapLayout = mapLayout.map(row => row.repeat(scaleFactor));
  // console.log(bigMapLayout);
  let [row, column] = [0, 0];
  let count = 0;
  while(row < mapLayout.length) {
    if(bigMapLayout[row][column] === '#') {
      count++;
    }
    row+=down;
    column+=right;
  }
  console.log(count);
}

tobogganRiding(3, 1);


const mapLayout = [
"..#.#...#.#.#.##.....###.#....#",
"...........##.#...#.#..........",
"....#.....#..#.............#...",
".#....###..##...#...##...#.#..#",
"#.......#.........#..#.......#.",
"...#.##..##...#.#......#.##.#..",
"#.#..##.....#.....#..##........",
"...#.####...#.##...#...........",
".#...#..#..#....#.#.#.#.##.....",
"##.#..#.##..#......#..##.#.#..#",
".#.##.....#.#...............#.#",
"..##.#.....#.....##..##.#....#.",
"#..#..........#...##........#..",
"#..##.#.#...............#..#...",
"..#....#...#.......#.......#...",
".........#.#.##.#........#.....",
"#...##....#..#.........#.#...##",
"...#.#...#...........#..#...#..",
"...#..#........#...#...........",
".#....##.#...#.#....#....##....",
"...#...#......#.#.......#...##.",
"####..........##....#..........",
"#..#...........................",
"#....#...####..##.#......#.#...",
"..#..#.....##.....#...#....#..#",
"#.##......#..##........#.......",
"..........#.....#...#.#.#....##",
"....##...##..#........#...#..#.",
"#..#..#...##..............##...",
"###.##..##.###...#....##.#..#..",
".#......#.................#.#..",
"#.#..#.##.#.#.#.....#.........#",
"..##......#.......##........#..",
"#..............#.##.#.....#....",
"............................##.",
"..#.##......#..........#....#..",
"..##.....#..##.#....#.......##.",
"..#.#.##.#.........#...........",
"...........##.#.#...#......###.",
"#....#...#........#.#...#.#.###",
"..............#...#.....##....#",
"#...#...#..............#..#...#",
".##..#.........#.##.#..#...##..",
".....#.........#..#..#.......#.",
".#......#.#.#....##..#...#..##.",
"#....................#.#....#..",
"......#.....##............#....",
".#.....#......####.....#....##.",
"##.####.#..#..........#......#.",
"##....................#..##....",
".....#...#.#.##.#.###.....#....",
".#..#...####.#.#...#.#.....#...",
"#.....##.........##.##.##.....#",
"....#....##.###.........#...###",
".......#........#.##.....#####.",
"...#.##..#...#...####.....##...",
"..#....#....#......#......#.#..",
"...#.#.#.........#.......#..#..",
".....#...........#.#........##.",
"..##...#.#.##.#.#.#...###.#....",
"..##.............###....#.#....",
"#.......#....#..#...#..##..#...",
"....##..#.......####....#..#.##",
"##....#...#.#.#...#...#........",
"....#.#................#...#...",
"...#.....#.#.......##....#.#..#",
"#....##.#...#.#..#.#.........#.",
"#..##.........##.....#...#.....",
"....#.....#.#..#..##..##.##...#",
"#.....#...#.#.#.##....#.#.##...",
".#.#........#..##.......#...#.#",
"..###.....#..#.##....#...#....#",
"...#..###...#...#.......#..#...",
".#....##.......#.#..........##.",
"...#.#.............##.....##...",
"..#..#...#.....#...#...........",
".#.#......#.##....#.....#......",
"........#.#.....#.#...#..#.#..#",
"#.....#.#.....#.##..#.#....#.#.",
"..#..###.#.#........#.....##..#",
"#.#....#......#.#....###..#...#",
"...#.#....#..#.##.....#...#....",
"....##....#.#...#.........#..##",
".#......#...#.............#..#.",
"#........#........#.#.....##...",
"..##..#.##..#........#.........",
".....#...#...#..#.....#.#.##.#.",
"..#..#..#.........#...#.......#",
"....#.....#.......#.##.#.##..##",
"......#.......##...#......#....",
"....#....##.......###.#......#.",
".....#..#.#........#....#.....#",
"#...#...#....#...###........#..",
"#...........####.......#.#..#.#",
"..###....#..........#...#.###..",
"....#.#.....#....#..#.....#.##.",
"...##.#..#..#.......#......#.#.",
"....#......###..#.....#.....#..",
".....#.#.#.....#.##.#....####..",
".##....#.....#.#....##..#......",
"#..#.....#..#...#....#.#.......",
".##.#..####..#.##.#......#.....",
"......#....#.......##.##....#..",
"...#....#....#..##.......##.###",
"..##..........##.............#.",
".#...#.#...##..##.....#..#.....",
"....#.#.##...................#.",
".......#.#..#....#.....#.......",
".#.#..#....####...#.#.##....#..",
".#.##...#..#..#...#.#.......#..",
"##.#.....##.........#.......#..",
".##...#.....#.........##.#....#",
".............#..#............##",
"...##.......#.....#.......#.##.",
"##..##.........................",
".##.#........#........#........",
".....#................#.#......",
".............#....#....##....#.",
"#..##...##...#..#.#............",
".......#...####.#..#..#.....##.",
"..#.#..#......#.....#.#.#.....#",
"...#..##........#..#.#....#.#..",
".#.....#..###..#....#.##.#...#.",
"#.#..#.##.#..#......#.###...#..",
"##..#.#..###....##.#...#...##.#",
"##..#.........#...##......#....",
"#.#...#.#..#..........#.......#",
".......#.#.......#.....##..#...",
"........#..##............##.#..",
"........##.....#........#..#...",
"#..##.#..###......##...........",
"..#.....#.#.#....#...#.#..#..##",
"#...............#.......#.#.##.",
"#..#.....#....#............#.#.",
"...#....#...#....#..#..###.....",
"..#....#.#.....#..#......##.#.#",
".#.#....#..#...#....#........#.",
"..##....##....#.....#.#........",
".#...#....##..##.....##.....##.",
".#...........#....##...##.#....",
"...#.....#......###.##.#.......",
"......#.#..##.#.#....#...#...##",
"....#...###.##....#.#.....#....",
".......#.....#......#.....##..#",
".####.#...##..#....#...........",
"................###...#....#..#",
"...#...#.....###.#.##.......#..",
"..#....#...##...#.###......#.#.",
"#...#......#............#.....#",
"#.........#...............#..#.",
"...#.##.....#............#.....",
"........#......##..#..#..#.#..#",
"....#....#.....#.#.....##..#...",
".....#....#..##.....#..........",
".##....#..#...........##.......",
"#......##.....#...#.....#......",
"...#.....#......#.#....#.......",
"...#................##...#..#..",
"........#..........#....#......",
"......#....#.#.#...........#.#.",
".#............#....##.......##.",
"#.......#.....#...##.#..##.....",
".#.....#.##..#..#....#.#..#.#.#",
"....#...............###........",
"#####...........#..#.......#..#",
"...#.......#...#.#............#",
"#...#..#.#...#.#...#.##.....##.",
".#..#..#..#.....#....#...#.....",
".#...#......#.......#.........#",
".#....#.....#...#...#..#....#..",
"#....#....#.......#.....##.....",
".#...#.#.##.#....#..##........#",
"..##...#............#..........",
"..........#..#..#...#....#.....",
"..#.......#....#.....##..##....",
".#...#......#...#..###...#...#.",
"..##...#......#...#.#.#...#....",
".....#..#.#.#.#.#...#....##..#.",
"##..#..##....#.#........##.#...",
".##..#.#...##..#....#..#.......",
".....#...#...#..#.#..#......#..",
".#.....##.##..#....####..#....#",
"......##.................#....#",
"....##.......###...#.##...##.#.",
"...#...#.................##.#..",
".#.....##...#...#.....#.....##.",
"##.........####..#...#...#....#",
"...##.....#......#.###..#......",
".....###..##.#.......###..##...",
"#....#...#.#...#...#.#....#..#.",
"#...#.........##.#.........###.",
"#....#..###..........##........",
".###.....#.#.....#........##..#",
"....#.........##..#..#.#.#..#..",
"..#......#...........#..##...#.",
"...#.#..#..#...#.##..#..#.....#",
".#...#...#....................#",
"..#..##..#.............#.....#.",
".....###.#.#.#...##..#.##....#.",
"..#...####..##.#....#...#...#..",
".....#..#........#.#.#..#.##...",
"#.#.........####..#...#.#......",
"..............#..#........#....",
"....#........#......#.........#",
"#..#.##......#.#.......#....#..",
"....#..............#.#.#..#....",
"#.#......#.....##.......#..##..",
".#.#..........#....#......#....",
".....#.......#.##.....#......##",
"...#...#.##.............####...",
"..#....##...#...##..#.#..##.#..",
"..#.........##.......###.#.....",
"..#.........#####..##...#......",
"..#.#...#.......#.####......##.",
"......#.#.#....#......####....#",
".###...........#...#..#..#..##.",
"..#...#..##.##...#.#.##.....#..",
".....#..#....##.......#...#....",
"......#.....#.........#..#..#..",
"...#..#.........##.....##.#...#",
"....##...#......#..#.....#.....",
"....#..#....#....#........##...",
"##.....#.......#.....#.#.#..#..",
".....#..##.....##.##.#.........",
".#.#..##.............#.#.......",
"......#.##.#.....#.#......#..#.",
"..........#.#..#....#.#.#.#..##",
"...##.....#..#...#...#...##....",
"........#.#......#..###..#.....",
"..#.##......#.......#.......#..",
"...#....##.##.........#.#......",
"......#....#.#.........#......#",
".....#...#....#...#......#..#..",
".##...#......#.........#...#.#.",
"..#.#.#......#....#............",
"..#.....##.............#.##.##.",
"#......#......#...##.......#.#.",
"##........#.....#..............",
".#.###.................#.#....#",
"........##.#..##........#.#....",
".......###...#...##.#..#....#..",
".#..#....#..#......##......#...",
".#...#....#..........##..##.#..",
".#..###.......#............#...",
"...#.....###.#..#........#.#.#.",
"...#....#..#.##..........#.#.#.",
".#..##..#.....#...........#....",
"#...#...##....#..#....##.......",
"#..#......#................#...",
"#..##....#.#..#......#.#.#.....",
"##.#..#...#.....#.#...#......##",
"#....#.#.#....#.....##.....##..",
"....#...##.#...####.#.#.#.#..#.",
".....#.#....#..#.....#..#......",
".........#.#...................",
"........#.....####......#..#..#",
".#.#.##.#...#.#......#...##.##.",
".#......#.#.#...#..#.......#...",
"..#......#.##.##.#.#....#......",
"..........#.#...###............",
".##..#..#.#.#..#.....#..#.#....",
"......#.......#.#..#.#....#...#",
".#.......###......#...#.#.#....",
".............##..#..#...#....#.",
"....#......#.#...#.#...#...#...",
"..#....#.......#.#..#..#.#..#.#",
".#..#.#...#.....#.#...#####...#",
".##............#....#..........",
"#.......####...#.#.#...........",
"...#.......##.#..........#....#",
"..#.#......#.......##.....#..##",
"#......#.###..#......#......#.#",
"##....#..#....#.##....#..#.....",
"...##...#.#....#.#.......#.....",
"#...####....#..#.#..#.##....###",
".....#..#..........###..#......",
".#..#..#...#....#.##..#..#.....",
"#..#.....#....#..#.##...##.....",
".....###.#..#.......#...###.##.",
"#..#........#.#..#.#.........#.",
"....##........................#",
".#....#.#.#.#.#...#......#....#",
"#....#...#.##.......#.#.###....",
"..........###..##....#..##.#...",
"...##..###...#.#.#.......##...#",
"##.#...#..#.....###....#.......",
"..#..##....###........##....###",
".....##..#...#..#.....#..#....#",
"#................#....#...#..##",
"#....#.#....#..###.#.#...#..#.#",
"........##.#...#.#.#.#...#.....",
"..#..###....#......##.#...##...",
"..#..##....#.##..#.....#.....#.",
".#.#...#.....#..#..#......##.#.",
"........#.#...#..##....#..#....",
"...##...#...#...#...##...##..#.",
".......#..#..#....#.#..#...##..",
".#.....#.##........#...#.#.....",
"##.#..#....#.#....#.#....#...#.",
"..#.#......#.......##...#....#.",
"#.#..####..#........#.......###",
"....#.......#.......##.#...#.#.",
"..#..#.#.............#..#......",
"........###.....##....#.......#",
"...#.....#...#...#....#.###....",
"#...##.#........#..#...##..#..#",
"...##..#....#....#.#.#...#.#...",
"#......#.....#....###......##..",
".....#.........####...##..#....",
".......#...##...#..#..#.#......",
".#.#....#.....#.......#........",
"...##...#....##..#.....###.....",
".#....#........##......#....#.#",
".........#.#.#.#...........#.#.",
"....#.#..##......#.#.#..##.....",
".........#.....##....#.........",
"....#.............#...........#",
"...#..##........#.....###......",
"#....#....#......#..#..#..#.#..",
"#......##.....#..#....#..#.#...",
"#..............#....#.#....###.",
"..##..#..#...#...##........##..",
"..#.##....#..#......###..#....."
];
